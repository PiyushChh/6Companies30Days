/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int rob(TreeNode root) {
        HashMap<TreeNode,Integer> map=new HashMap<>();
        return func(root,map);
       
    }
    public int func(TreeNode root,HashMap<TreeNode,Integer> map){
        if(root==null){
            return 0;
        }
        if(map.containsKey(root)){
            return map.get(root);
        }
        int total=root.val;

        if(root.left!=null){
            total+=func(root.left.left,map)+func(root.left.right,map);
        }
        if(root.right!=null){
            total+=func(root.right.left,map)+func(root.right.right,map);
        }
        
        int res= Math.max(total,func(root.left,map)+func(root.right,map));
        map.put(root,res);

        return res;
    }
}
