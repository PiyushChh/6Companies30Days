/**
 * // This is MountainArray's API interface.
 * // You should not implement it, or speculate about its implementation
 * interface MountainArray {
 *     public int get(int index) {}
 *     public int length() {}
 * }
 */
 
class Solution {
    public int findInMountainArray(int target, MountainArray mountainArr) {
        int peak=binary(target,mountainArr);
        int found=-1;
        found=bsearch1(mountainArr,target,0,peak);
        if(found!=-1){
            return found;
        }
        found=bsearch2(mountainArr,target,peak+1,mountainArr.length()-1);
        return found;
    }
     public int bsearch2(MountainArray mount,int target,int s,int e){
        while(s<=e){
            int mid=s+(e-s)/2;
            if(mount.get(mid)==target){
                return mid;
            }
            else if(mount.get(mid)>target){
                s=mid+1;
            }
            else{
                e=mid-1;
            }
        }
        return -1;
    }
    public int bsearch1(MountainArray mount,int target,int s,int e){
        while(s<=e){
            int mid=s+(e-s)/2;
            if(mount.get(mid)==target){
                return mid;
            }
            else if(mount.get(mid)>target){
                e=mid-1;
            }
            else{
                s=mid+1;
            }
        }
        return -1;
    }
    public int binary(int target,MountainArray mountain){
        int s=0;
        int e=mountain.length()-1;
        while(s<e){
            int mid=s+(e-s)/2;
            if(mountain.get(mid)>mountain.get(mid+1)){
                e=mid;
            }
            else{
                s=mid+1;
            }
        }
        return s;
    }
}
