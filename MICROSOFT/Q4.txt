396. Rotate Function
(took help from Discussion-tried rotating the array from 0 to n-1 and found the max sum but failed in a test case)
(so used dp)
Intuition- 
arr=(a,b,c,d)
f(0)=b+2c+3d;
f(1)=(d,a,b,c)=a+2b+3c;
sum=a+b+c+d;
f(1)-f(0)=a+b+c-3d;
f(1)-f(0)=sum-4d;
f(1)=f(0)+sum-4d;
f(k)=f(k-1)+sum-N*arr[N-k];




class Solution {
    public int maxRotateFunction(int[] nums) {
        int sum=0;
        int dp[]=new int[nums.length];

        for(int i=0;i<nums.length;i++){
            sum+=nums[i];
            dp[0]+=(i*nums[i]);

        }
        int max=dp[0];
        for(int k=1;k<nums.length;k++){
            dp[k]=dp[k-1]+sum-(nums.length*nums[nums.length-k]);
            max=Math.max(dp[k],max);
        }
        return max;
    }
}
